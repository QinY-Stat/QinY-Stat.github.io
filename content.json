{"meta":{"title":"覃","subtitle":"What I cannot create, I don't understand.","description":"What I cannot create, I don't understand.","author":"Qin Yue","url":"http://github.com/QinY-Stat","root":"/"},"pages":[],"posts":[{"title":"模块度(Modularity)发展历程","slug":"Modularity","date":"2020-01-21T18:29:07.000Z","updated":"2020-01-23T15:55:22.392Z","comments":true,"path":"2020/01/22/Modularity/","link":"","permalink":"http://github.com/QinY-Stat/2020/01/22/Modularity/","excerpt":"","text":"与小世界性[1]、无标度等基本统计特性相并列，Girvan&amp;Newman[2]在2001年发现的网络社区结构(Community Structure)是复杂网络最普遍和最重要的拓扑结构属性之一，具有相同社区节点相互连接密集、不同社区节点相互连接稀疏的特点，如图1所示。复杂网络中的社区发现方法目的在于揭示出复杂网络中真实存在的网络社区结构。 图1 社区结构为了度量实际网络中社区发现方法的好坏，Newman[3]于2004年提出了一个用于测度复杂网络中社区划分质量指标——模块度(Modularity)。在这之后，许多研究者以模块度函数作为目标函数，提出了一系列基于模块度最优的社区发现算法。 模块度的定义与发展1.1原始定义(Q1)1.1.1 迹(Trace)对于一个给定的网络$G=(V,E)$，其中$V$为网络的节点集，$E$为网络的边集。将$G$划分为$q$个社区，我们用一个$q\\times q$的对称矩阵$\\textbf{e}$来表示该划分，$\\textbf{e}$中的每个元素表示连接社区$i$与社区$j$的边在$G$的全部边中所占的比例，显然有$\\sum_{i,j}e_{ii}=1$。矩阵$\\textbf{e}$的迹$Tr(\\textbf{e})$表示连接社区内部节点的边的占比，一个好的社区划分应该有一个数值很高的迹。 但研究发现，单独使用迹$Tr(\\textbf{e})$在一些情况下无法很好地测度划分质量，例如这样一个平凡划分：将所有点放到同一个社区中。此时$Tr(\\boldsymbol{e})$=1为最大值，但该划分在绝大部分情况下显然不具有任何意义。 1.1.2 模块度(Q1)Newman[3]认为，考虑一个与$G$具有相同社区划分、相同边数但节点间随机连接的随机网络$G’$，若$G$具有社区结构，社区内部边占总边数的比例应该大于随机情况下的该比例的期望。实际社区内部边与期望的差越大，说明网络与随机网络的差异越大，即网络越具有社区结构。则模块度定义为 Q==Tr(\\boldsymbol{e})-\\left\\|\\boldsymbol{e}\\right\\|^{2} \\qquad \\qquad (1)理论上有$Q\\in[-1,1]$，但取值为$\\pm1$的情况是极为罕见的。$G$的一个社区划分的模块度为正数时，表明社区结构可能存在。在该定义下，平凡划分(将所有点放到同一个社区中)的模块度为$Q=0$。 1.2 考虑节点度的模块度(Q2)上述定义是简单且直接的，但存在一个问题：在构建随机网络$G’$时，没有考虑到原网络$G$的节点度。由于节点的度在一定程度上能够表示该节点被连接的概率，所以Newman[4]于2006年对模块度进行了重新定义。 考虑一个具有$n$个节点的无向无权网络，我们可以用它的邻接矩阵$\\textbf{A}$来表示该网络。$\\textbf{A}$是一个的$n\\times n$对称矩阵，通常来说 {A_{ij}} = \\left\\{ \\begin{array}{l} 1{\\rm{ }},(i,j) \\in E\\\\ 0{\\rm{ }},(i,j) \\notin E \\end{array} \\right. \\qquad \\qquad (2)一般地，我们约定$A_{ii}=0$。在允许多重边存在的网络中，$A_{ij}$允许取比1大的值。将网络划分为$q$个不重叠的社区，令$g_{i}$表示节点$i$所在的社区，则$\\boldsymbol{g}=(g_{1},…,g_{n})$是对网络的一个划分。对于一个特定的划分$\\boldsymbol{g}$，网络的社团内部边的数量为$\\frac{1}{2}\\sum\\limits_{i,j}{{A_{ij}}{\\delta_{{g_i}{g_j}}}}$，其中$\\delta_{ij}$是一个克罗内克函数(Kronecker delta): {\\delta_{ij}} = \\left\\{ \\begin{array}{l}1{\\rm{ }},(i,j) \\in E\\\\0{\\rm{ }},(i,j) \\notin E \\end{array} \\right. \\qquad \\qquad (3)对于随机网络$G’$，保持原网络$G$的边数$m$与各节点的度不变，将这$m$条边随机地重新定位到任意两个节点间。随机化后，令$P_{ij}$表示节点$i$与$j$相连接的概率，则社区内部边数的期望值为$\\frac{1}{2}\\sum\\limits_{i,j} {{P_{ij}}{\\delta_{{g_i}{g_j}}}}$。故重新定义的模块度为：$$\\begin{array}{l} Q = \\frac{1}{m}\\left( {\\frac{1}{2}\\sum\\limits_{i,j} {{A_{ij}}{\\delta_{{g_i}{g_j}}}} - \\frac{1}{2}\\sum\\limits_{i,j} {{P_{ij}}{\\delta_{{g_i}{g_j}}}} } \\right)\\\\{\\rm{ }} = \\frac{1}{{2m}}\\sum\\limits_{i,j} {({A_{ij}} - {P_{ij}}){\\delta_{{g_i}{g_j}}}} \\\\ Q \\in [ - 0.5,1] \\end{array} \\qquad \\qquad (4)$$对于一个特定的网络，模块度的大小与$m$不相关，仅与社区划分有关。这一定义使用边数的比例而不是边数的绝对值，这使得不同规模的网络划分的模块度可以进行比较。注意到，此时平凡划分的模块度为：$$Q=\\frac{1}{{2m}}\\sum\\limits_{i,j} {({A_{ij}} - {P_{ij}}) = 0} \\qquad \\qquad (5)$$因为在随机化中，网络中边的数量被视为常数，即$\\sum\\nolimits_{ij}{{P_{ij}}}=\\sum\\nolimits_{ij} {{A_{ij}} = 2m}$。现在需要确定如何计算$P_{ij}$。这个值依赖于我们用来做随机化的方案。一个简单的方案是，对于任意两个节点$i$和$j$，令它们具有相同的连接概率，即对于给定边数$m$、节点数$n$的网络，有：$$P_{ij}=\\frac{m}{{C_{n}^{2}}} \\qquad \\qquad (6)$$理论上说，这里$P_{ij}$应该是节点$i$与节点$j$之间的边数的期望而不是$i$与$j$相连接的概率，但由于$m&lt;","categories":[],"tags":[{"name":"复杂网络","slug":"复杂网络","permalink":"http://github.com/QinY-Stat/tags/%E5%A4%8D%E6%9D%82%E7%BD%91%E7%BB%9C/"}]}]}